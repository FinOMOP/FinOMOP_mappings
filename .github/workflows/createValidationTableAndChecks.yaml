# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  pull_request:
    branches: [main, development]
    paths:
        - 'VOCABULARIES/**'
  workflow_dispatch:

name: createValidationTableAndCheck

jobs:
  createValidationTableAndCheck:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write      # Allows pushing to the repository
      pull-requests: write # If you need to comment on PRs
    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Install dependencies
        shell: Rscript {0}
        run: |
          install.packages("remotes")
          remotes::install_github("FinOMOP/ROMOPMappingTools", ref = "towards_v2", force = TRUE)

      - name: Copy OMOP_vocabularies from private repo       
        uses: robinraju/release-downloader@v1.7
        with:
          repository: 'FinOMOP/OMOP_vocabularies'
          latest: true
          fileName: 'input_omop_vocabulary.zip'
          out-file-path: 'input_data'
          token: ${{ secrets.TOKEN_OMOP_VOCABULARIES }}

      - name: unzip input_omop_vocabulary.zip
        working-directory: input_data
        shell: bash
        run: |
         unzip -o input_omop_vocabulary.zip

      - name: Run R script
        working-directory: .github/scripts
        shell: Rscript {0}
        run: source("createValidationTableAndChecks.R")

      - name: Upload results to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: validationResults
          path: output_data/validationResults
          retention-days: 1

      - name: Commit and push validation status
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          # Get the current branch name from GITHUB_HEAD_REF (for pull requests) or GITHUB_REF
          branch_name="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          git add validationStatus.md
          git commit -m "Update validation status [skip ci]" || echo "No changes to commit"
          git push origin HEAD:${branch_name}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    

      
